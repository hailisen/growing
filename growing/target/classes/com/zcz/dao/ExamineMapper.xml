<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zcz.dao.ExamineMapper">
  <resultMap id="BaseResultMap" type="com.zcz.bean.Examine">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="emp_id" jdbcType="INTEGER" property="empId" />
    <result column="year" jdbcType="INTEGER" property="year" />
    <result column="result" jdbcType="INTEGER" property="result" />
  </resultMap>
  <sql id="Base_Column_List">
    id, emp_id, year, result
  </sql>
  <resultMap id="ExamineYearMap" type="com.zcz.bean.vo.ExamineYear">
    <result column="name" jdbcType="VARCHAR" property="name"/>
    <result column="phone" jdbcType="VARCHAR" property="phone"/>
    <result column="phone" jdbcType="VARCHAR" property="phone"/>
    <result column="dept_name" jdbcType="VARCHAR" property="deptName"/>
    <result column="post_name" jdbcType="VARCHAR" property="postName"/>
    <collection property="maps" ofType="java.util.Map">
      <result column="result" jdbcType="INTEGER" property="result"/>
      <result column="count" jdbcType="INTEGER" property="count"/>
    </collection>
  </resultMap>
  <!--年度考核统计-->
  <select id="examineByYear" resultMap="ExamineYearMap">
    select te.`name`,te.phone,tb.dept_name,tp.post_name,result,COUNT(result) as count,tex.`year`
    from tb_employee te
    left join tb_examine tex on te.id = tex.emp_id
    left join tb_post tp on tp.id = te.post_id
    LEFT JOIN tb_dept tb on tb.id = te.dept_id
    group By result,te.id
    having tex.year &gt;=#{startYear} and tex.year &lt;=#{endYear}
    limit #{start},#{pageSize}
  </select>
  <!--年度考核统计总条数-->
  <select id="examineCountYear" resultMap="ExamineYearMap">
    select te.`name`,te.phone,tb.dept_name,tp.post_name,result,COUNT(result) as count,tex.`year`
    from tb_employee te
    left join tb_examine tex on te.id = tex.emp_id
    left join tb_post tp on tp.id = te.post_id
    LEFT JOIN tb_dept tb on tb.id = te.dept_id
    group By result,te.id
    having tex.year &gt;=#{startYear} and tex.year &lt;=#{endYear}
  </select>
  <!-- 添加年度考核,初始化默认所有人员一致 -->
  <insert id="insertSelective" parameterType="com.zcz.bean.Examine">
    insert into tb_examine
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="empId != null">
        emp_id,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="result != null">
        result,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="empId != null">
        #{empId,jdbcType=INTEGER},
      </if>
      <if test="year != null">
        #{year,jdbcType=INTEGER},
      </if>
      <if test="result != null">
        #{result,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <!--查询年度下拉框-->
  <select id="findYean" resultType="Integer">
    select distinct year from tb_examine order by year desc
  </select>
  <!--批量修改员工考核结果-->
  <update id="updateResult">
    update tb_examine set result = #{result} where empId=#{empId} and year=#{year}
  </update>
  <!--修改一条考核结果-->
  <update id="updateById">
    update tb_examine set result=#{result} where id=#{id}
  </update>
  <!--查询考核的人数-->
  <select id="examineCount" resultType="java.lang.Integer">
      select count(*) from tb_employee te inner join tb_examine tex on te.id=tex.emp_id
      where tex.result=#{result}
  </select>
  <!--教师考核列表-->
  <select id="getExamineList" resultType="com.zcz.bean.vo.ExamineList">
    select examine.id,te.`name`,te.phone,tb.dept_name as deptName,tp.post_name as postName,examine.`year`,examine.result
    from tb_employee te left join tb_post tp on te.post_id=tp.id
    left join tb_dept tb on te.dept_id=tb.id
    inner join tb_examine examine on te.id=examine.emp_id
    <where>
      <if test="year!=null and year !=''.toString">
        examine.year=#{year}
      </if>
      <if test="result != null">
        and examine.result=#{result}
      </if>
    </where>
    order by examine.year desc
    limit #{start},#{pageSize}
  </select>
  <!-- 教师考核列表总条数 -->
  <select id="examineListCount" resultType="java.lang.Integer">
    select count(*)
    from tb_employee te left join tb_post tp on te.post_id=tp.id
    left join tb_dept tb on te.dept_id=tb.id
    inner join tb_examine examine on te.id=examine.emp_id
    <where>
      <if test="year!=null and year !=''.toString">
        examine.year=#{year}
      </if>
      <if test="result != null">
        and examine.result=#{result}
      </if>
    </where>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_examine
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_examine
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zcz.bean.Examine">
    insert into tb_examine (id, emp_id, year, 
      result)
    values (#{id,jdbcType=INTEGER}, #{empId,jdbcType=INTEGER}, #{year,jdbcType=INTEGER}, 
      #{result,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zcz.bean.Examine">
    update tb_examine
    <set>
      <if test="empId != null">
        emp_id = #{empId,jdbcType=INTEGER},
      </if>
      <if test="year != null">
        year = #{year,jdbcType=INTEGER},
      </if>
      <if test="result != null">
        result = #{result,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zcz.bean.Examine">
    update tb_examine
    set emp_id = #{empId,jdbcType=INTEGER},
      year = #{year,jdbcType=INTEGER},
      result = #{result,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>