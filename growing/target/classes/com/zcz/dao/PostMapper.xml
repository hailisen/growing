<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zcz.dao.PostMapper">
  <resultMap id="BaseResultMap" type="com.zcz.bean.Post">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="post_name" jdbcType="VARCHAR" property="postName" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="order_num" jdbcType="INTEGER" property="orderNum" />
  </resultMap>
  <sql id="Base_Column_List">
    id, post_name, note, order_num
  </sql>
  <!--查询比当前排序数大的岗位记录集合-->
  <select id="findByOrder" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from tb_post
    where order_num &gt; #{orderNum}
  </select>
  <!--更改顺序-->
  <update id="updateOrderByOrder">
    update tb_post set order_num=#{newOrder} where order_num=#{oldOrder}
  </update>
  <!--更改顺序-->
  <update id="updateOrderById">
    update tb_post set order_num=#{newOrder} where id=#{postId}
  </update>
  <!-- 当前岗位排序数 -->
  <select id="findOrderNum" resultType="java.lang.Integer">
    select max(order_num) from tb_post
  </select>
  <!--查询岗位列表-->
  <select id="findPostList" resultType="java.util.Map">
      select tp.id,tp.post_name as postName,count(te.id) as empNum,tp.note,tp.order_num as orderNum
      from tb_employee te
      right join tb_post tp on tp.id=te.post_id
      group by tp.id
      order by tp.order_num
  </select>
  <!--根据部门名称和岗位名查询该岗位的ID-->
  <select id="findIdByName" resultType="java.lang.Integer">
     select tp.id from tb_post tp tp.post_name=#{postName}
  </select>
  <!--查询某部门下的岗位下拉框-->
  <select id="getPostByDept" resultType="java.util.Map">
    select id,post_name as postName from tb_post
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_post
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_post
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zcz.bean.Post">
    insert into tb_post (id, post_name, note, 
      order_num, dept_id)
    values (#{id,jdbcType=INTEGER}, #{postName,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}, 
      #{orderNum,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zcz.bean.Post">
    insert into tb_post
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="postName != null">
        post_name,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="orderNum != null">
        order_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="postName != null">
        #{postName,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="orderNum != null">
        #{orderNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zcz.bean.Post">
    update tb_post
    <set>
      <if test="postName != null">
        post_name = #{postName,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="orderNum != null">
        order_num = #{orderNum,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zcz.bean.Post">
    update tb_post
    set post_name = #{postName,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      order_num = #{orderNum,jdbcType=INTEGER},
      dept_id = #{deptId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>