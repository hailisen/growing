<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zcz.dao.EmployeeMapper">
  <resultMap id="BaseResultMap" type="com.zcz.bean.Employee">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="emp_no" jdbcType="VARCHAR" property="empNo"/>
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="brithday" jdbcType="DATE" property="brithday" />
    <result column="persion_id" jdbcType="VARCHAR" property="persionId" />
    <result column="navite_place" jdbcType="VARCHAR" property="navitePlace" />
    <result column="edu_background" jdbcType="VARCHAR" property="eduBackground" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="nature" jdbcType="INTEGER" property="nature" />
    <result column="entry_day" jdbcType="DATE" property="entryDay" />
    <result column="post_id" jdbcType="INTEGER" property="postId" />
    <result column="dept_id" jdbcType="INTEGER" property="deptId" />
    <result column="kindergarten_id" jdbcType="INTEGER" property="kindergartenId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <resultMap id="teacherInfoMap" type="com.zcz.bean.vo.EmployeeVO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="emp_no" jdbcType="VARCHAR" property="empNo"/>
    <result column="brithday" jdbcType="DATE" property="brithday" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="persion_id" jdbcType="VARCHAR" property="persionId" />
    <result column="navite_place" jdbcType="VARCHAR" property="navitePlace" />
    <result column="edu_background" jdbcType="VARCHAR" property="eduBackground" />
    <result column="entry_day" jdbcType="DATE" property="entryDay" />
    <result column="dept_name" jdbcType="VARCHAR" property="deptName" />
    <result column="post_name" jdbcType="VARCHAR" property="postName" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="nature" jdbcType="INTEGER" property="nature" />
    <collection property="educationBackgrounds" ofType="com.zcz.bean.EducationBackground">
      <id column="edu_id" property="id" jdbcType="INTEGER"/>
      <result column="school" property="school" jdbcType="VARCHAR"/>
      <result column="major" property="major" jdbcType="VARCHAR"/>
      <result column="entry_date" property="entryDate" jdbcType="DATE"/>
      <result column="graduation_date" property="graduationDate" jdbcType="DATE"/>
      <result column="remark" property="remark" jdbcType="VARCHAR"/>
      <result column="edu_level" property="eduLevel" jdbcType="INTEGER"/>
    </collection>
    <collection property="positions" ofType="com.zcz.bean.vo.PositionVO">
      <id column="position_id" property="id" jdbcType="INTEGER"/>
      <id column="peId" property="peId" jdbcType="INTEGER"/>
      <result column="position_name" jdbcType="VARCHAR" property="positionName" />
      <result column="cate_name" jdbcType="VARCHAR" property="cateName"/>
      <result column="position_url" jdbcType="VARCHAR" property="positionUrl"/>
      <result column="poseFileName" jdbcType="VARCHAR" property="fileName"/>
      <result column="positionGetTime" jdbcType="DATE" property="positionGetTime"/>
    </collection>
    <collection property="commends" ofType="com.zcz.bean.Commend">
      <id column="commend_id" property="id" jdbcType="INTEGER"/>
      <result column="level" jdbcType="VARCHAR" property="level" />
      <result column="commend_name" jdbcType="VARCHAR" property="commendName" />
      <result column="commendNote" jdbcType="VARCHAR" property="note" />
      <result column="commend_url" property="url" jdbcType="VARCHAR"/>
      <result column="commendFileName" jdbcType="VARCHAR" property="fileName"/>
      <result column="get_time" javaType="DATE" property="getTime"/>
    </collection>
    <collection property="agreements" ofType="com.zcz.bean.Agreement">
      <id column="agreement_id" property="id" jdbcType="INTEGER"/>
      <result column="agree_name" jdbcType="VARCHAR" property="agreeName" />
      <result column="start_time" jdbcType="DATE" property="startTime" />
      <result column="end_time" jdbcType="VARCHAR" property="endTime" />
      <result column="agree_url" property="url" jdbcType="VARCHAR"/>
      <result column="file_name" property="filename" jdbcType="VARCHAR"/>
    </collection>
    <collection property="changeds" ofType="com.zcz.bean.vo.ChangedVO">
        <id column="changed_id" property="id" javaType="INTEGER"/>
        <result column="change_time" jdbcType="DATE" property="changeTime"/>
        <result column="changed_status" jdbcType="INTEGER" property="status"/>
        <result column="changed_nature" jdbcType="INTEGER" property="nature"/>
        <result column="change_postId" jdbcType="INTEGER" property="postId"/>
        <result column="change_deptId" jdbcType="INTEGER" property="deptId"/>
    </collection>
    <collection property="examines" ofType="com.zcz.bean.vo.ExamineVO">
      <id column="examine_id" property="id" javaType="INTEGER"/>
      <result column="name" jdbcType="VARCHAR" property="name"/>
      <result column="year" jdbcType="INTEGER" property="year"/>
      <result column="result" jdbcType="INTEGER" property="result"/>
    </collection>
  </resultMap>

  <!--教师详细信息-->
  <select id="selectTeacherInfo" parameterType="java.lang.Integer" resultMap="teacherInfoMap">
      select te.id,name,sex,te.emp_no,brithday,phone,persion_id,navite_place,edu_background,entry_day,td.dept_name,tp.post_name,te.status ,te.nature,-- 员工信息
      edu.id as edu_id,edu.school,edu.major,edu.entry_date,edu.graduation_date,edu.remark,edu.edu_level, -- 教育背景
      pos.id as position_id,pos_emp.id as peId,pos.position_name,pos_emp.file_name as poseFileName,pos_emp.get_time as positionGetTime,pos_emp.url as position_url,cate.cate_name, -- 职称信息
      com.id as commend_id ,com.commend_name ,com.note as commendNote, com.`level`,com.file_name as commendFileName,com.url as commend_url,com.get_time, -- 表彰信息
      agree.id as agreement_id,agree.agree_name,agree.start_time,agree.end_time,agree.url as agree_url,agree.file_name, -- 员工协议
      chang.id as changed_id,chang.`status` as changed_status,chang.nature as changed_nature,chang.change_time,chang.post_id as change_postId,chang.dept_id as change_deptId, -- 员工变更表
      examine.id as examine_id,examine.`year`,examine.result
      from tb_employee te left join tb_post tp on tp.id = te.post_id
      left join tb_dept td on td.id=te.dept_id
      left join tb_education_background edu on edu.emp_id = te.id
      left join tb_position_emp pos_emp on pos_emp.emp_id=te.id
      left join tb_position pos on pos.id = pos_emp.position_id
      left join tb_cate_level clevel on clevel.id= pos.category_id
      left join tb_category cate on cate.id = clevel.category_id
      left join tb_commend com on com.emp_id = te.id
      left join tb_agreement agree on agree.emp_id = te.id
      left join tb_changed chang on chang.emp_id=te.id
      left join tb_examine examine on examine.emp_id = te.id
      where te.id = #{empId}
  </select>
  <sql id="Base_Column_List">
    id, name, phone,emp_no, password, sex, brithday, persion_id, navite_place, edu_background,
    status, nature, entry_day,dept_id, post_id, kindergarten_id
  </sql>
  <!--根据部门查找员工-->
  <resultMap id="DeptEmp" type="com.zcz.bean.vo.DeptEmp">
    <id column="id" property="id" jdbcType="INTEGER"/>
    <result column="dept_name" property="deptName" jdbcType="VARCHAR"/>
    <collection property="emps" ofType="com.zcz.bean.vo.EmpListVO">
      <id column="emp_id" property="empId" jdbcType="INTEGER"/>
      <result column="name" property="name" jdbcType="VARCHAR"/>
    </collection>
  </resultMap>
  <select id="findEmpIdInDept" resultType="java.lang.Integer">
    select te.id from tb_employee te
    inner join tb_post tp on te.post_id=tp.id
    inner join tb_dept td on te.dept_id=td.id
    where td.id=#{deptId}
  </select>
  <select id="findEmpByDept" resultMap="DeptEmp">
    select tb.id,tb.dept_name,te.id as emp_id,te.name
    from tb_employee te
    right join tb_dept tb on tb.id = te.dept_id
  </select>
  <!--查询所有员工ID-->
  <select id="findAllId" resultType="java.lang.Integer">
    select id from tb_employee
  </select>
  <!--查询所有的员工编号集合-->
  <select id="findAllEmpno" resultType="java.lang.String">
    select emp_no from tb_employee
  </select>
  <!--自动生成员工编号-->
  <select id="autoEmpno" resultType="int">
    select empno from empno_auto where id=1
  </select>
  <!--修改员工编号自动生成的基数-->
  <update id="updateEmpno">
    update empno_auto set empno=#{empno}
  </update>
  <!--登陆方法-->
  <select id="login" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/> from tb_employee where phone=#{phone} and password=#{password}
  </select>
  <!--查询教师总条数-->
  <select id="findCount" resultType="java.lang.Integer">
      select count(*)
      from tb_employee te
      left join tb_post tp on te.post_id=tp.id
      left join tb_dept tb on te.dept_id=tb.id
      left join(select id,position_id,emp_id,get_time,url,file_name from
      (select pe.id,pe.position_id,pe.emp_id,pe.get_time,pe.url,pe.file_name,
      @rownum:=@rownum+1,if(@pdept=pe.emp_id,@rank:=@rank+1,@rank:=1) as rank,
      @pdept:=pe.emp_id from
      (select id,position_id,emp_id,get_time,url,file_name from tb_position_emp order by get_time desc) pe,
      (select @rownum:=0,@pdept:=null,@rank=0) a
      ) c where rank=1
      ) pos_e on te.id=pos_e.emp_id
      left join tb_position pos on pos.id=pos_e.position_id
    <where>
      <if test="deptId != null and deptId!=''.toString()">
        tb.id=#{deptId}
      </if>
      <if test="postId != null and postId != ''.toString()">
        and tp.id=#{postId}
      </if>
      <if test="positionId != null and positionId != ''.toString()">
        and pos.id=#{positionId}
      </if>
      <if test="eduBackground != null and eduBackground != ''.toString()">
        and te.edu_background=#{eduBackground}
      </if>
      <if test="status != null and status != ''.toString()">
        and te.status=#{status}
      </if>
      <if test="nature != null and nature != ''.toString()">
        and te.nature=#{nature}
      </if>
      <if test="name != null and name != ''.toString()">
        and te.name=#{name}
      </if>
      <if test="phone != null and phone != ''.toString()">
        and te.phone=#{phone}
      </if>
    </where>
  </select>
  <!--分页查询员工信息-->
  <select id="findByPage" resultType="com.zcz.bean.vo.EmployeeWithPage">
--       select te.id,te.name, te.sex,te.phone,tb.dept_name as deptName,tp.post_name as postName,pos.position_name as positionName,te.edu_background as eduBackground,
--       te.navite_place as navitePlace,te.status,te.nature
--       from tb_employee te
--       left join tb_post tp on te.post_id=tp.id
--       left join tb_dept tb on te.dept_id=tb.id
--       left join(select id,position_id,emp_id,get_time,url,file_name from
--                   (select pe.id,pe.position_id,pe.emp_id,pe.get_time,pe.url,pe.file_name,
--                   @rownum:=@rownum+1,if(@pdept=pe.emp_id,@rank:=@rank+1,@rank:=1) as rank,
--                   @pdept:=pe.emp_id from
--                   (select id,position_id,emp_id,get_time,url,file_name from tb_position_emp order by get_time desc) pe,
--                   (select @rownum:=0,@pdept:=null,@rank=0) a
--                   ) c where rank=1
--                   ) pos_e on te.id=pos_e.emp_id
--       left join tb_position pos on pos.id=pos_e.position_id
    select te.id,te.name, te.sex,te.phone,tb.dept_name as deptName,tp.post_name as postName,pos.position_name as positionName,te.edu_background as eduBackground,
    te.navite_place as navitePlace,te.status,te.nature
    from tb_employee te
    left join tb_post tp on te.post_id=tp.id
    left join tb_dept tb on te.dept_id=tb.id
    left join(
    select id,position_id,emp_id,get_time,url,file_name from tb_position_emp tpe group by tpe.emp_id order by tpe.get_time desc
    ) pos_e on te.id=pos_e.emp_id
    left join tb_position pos on pos.id = pos_e.position_id
    <where>
      <if test="deptId != null and deptId!=''.toString()">
        tb.id=#{deptId}
      </if>
      <if test="postId != null and postId != ''.toString()">
        and tp.id=#{postId}
      </if>
      <if test="positionId != null and positionId != ''.toString()">
        and pos.id=#{positionId}
      </if>
      <if test="eduBackground != null and eduBackground != ''.toString()">
        and te.edu_background=#{eduBackground}
      </if>
      <if test="status != null and status != ''.toString()">
        and te.status=#{status}
      </if>
      <if test="nature != null and nature != ''.toString()">
        and te.nature=#{nature}
      </if>
      <if test="name != null and name != ''.toString()">
        and te.name=#{name}
      </if>
      <if test="phone != null and phone != ''.toString()">
        and te.phone=#{phone}
      </if>
    </where>
    order by te.emp_no asc
    limit #{start},#{pageSize}
  </select>
  <!--获取协议即将到期的人员信息提前一个月-->
  <select id="agreementTime" resultType="java.util.Map">
    select te.id,te.name,te.sex,te.phone,tb.dept_name as deptName,tp.post_name as postName,
    agree.agree_name as agreeName,agree.end_time as endTime,te.edu_background as eduBackground,te.nature,te.status
    from tb_employee te
    left join tb_post tp on te.post_id=tp.id
    left join tb_dept tb on te.dept_id=tb.id
    left join(
    select id,position_id,emp_id,get_time,url,file_name from tb_position_emp tpe group by tpe.emp_id order by tpe.get_time desc
    ) pos_e on te.id=pos_e.emp_id
    left join tb_position pos on pos.id=pos_e.position_id
    left join tb_agreement agree on agree.emp_id=te.id
    where to_days(agree.end_time) &lt;=to_days(now())+30
    and te.status in(1,3)
    <if test="deptId != null and deptId!=''.toString()">
      and tb.id=#{deptId}
    </if>
    <if test="postId != null and postId != ''.toString()">
      and tp.id=#{postId}
    </if>
    <if test="eduBackground != null and eduBackground != ''.toString()">
      and te.edu_background=#{eduBackground}
    </if>
    <if test="nature != null and nature != ''.toString()">
      and te.nature=#{nature}
    </if>
    <if test="name != null and name != ''.toString()">
      and te.name=#{name}
    </if>
    <if test="phone != null and phone != ''.toString()">
      and te.phone=#{phone}
    </if>
    limit #{start},#{pageSize}
  </select>
  <!--获取协议即将到期的人员的人数-->
  <select id="agreementTimeCount" resultType="java.lang.Integer">
    select count(*) from tb_employee te
    left join tb_post tp on te.post_id=tp.id
    left join tb_dept tb on te.dept_id=tb.id
    left join(
    select id,position_id,emp_id,get_time,url,file_name from tb_position_emp tpe group by tpe.emp_id order by tpe.get_time desc
    ) pos_e on te.id=pos_e.emp_id
    left join tb_position pos on pos.id=pos_e.position_id
    left join tb_agreement agree on agree.emp_id=te.id
    where to_days(agree.end_time) &lt;=to_days(now())+30
    and te.status in(1,3)
    <if test="deptId != null and deptId!=''.toString()">
      and tb.id=#{deptId}
    </if>
    <if test="postId != null and postId != ''.toString()">
      and tp.id=#{postId}
    </if>
    <if test="eduBackground != null and eduBackground != ''.toString()">
      and te.edu_background=#{eduBackground}
    </if>
    <if test="nature != null and nature != ''.toString()">
      and te.nature=#{nature}
    </if>
    <if test="name != null and name != ''.toString()">
      and te.name=#{name}
    </if>
    <if test="phone != null and phone != ''.toString()">
      and te.phone=#{phone}
    </if>
  </select>
  <!--职称年限提醒信息-->
  <select id="positionAlter" resultType="java.util.Map">
      select te.id,te.name as name,te.sex,te.phone,tb.dept_name as deptName,tp.post_name as postName,pos.position_name as positionName,
      te.edu_background as eduBackground,te.navite_place as navitePlace,te.nature,te.status,pos_e.get_time as getTime,cle.time_limit as timeLimit
      from tb_employee te
      left join tb_post tp on te.post_id=tp.id
      left join tb_dept tb on te.dept_id=tb.id
      left join(select id,position_id,emp_id,get_time,url,file_name from
      (select pe.id,pe.position_id,pe.emp_id,pe.get_time,pe.url,pe.file_name,
      @rownum:=@rownum+1,if(@pdept=pe.emp_id,@rank:=@rank+1,@rank:=1) as rank,
      @pdept:=pe.emp_id from
      (select id,position_id,emp_id,get_time,url,file_name from tb_position_emp order by get_time desc) pe,
      (select @rownum:=0,@pdept:=null,@rank=0) a
      ) c where rank=1
      ) pos_e on te.id=pos_e.emp_id
      left join tb_position pos on pos.id=pos_e.position_id
			inner join tb_cate_level cle on cle.id=pos.category_id
			inner join tb_category tcate on cle.category_id=tcate.id
		where te.status in(1,3)
    <if test="deptId != null and deptId!=''.toString()">
      and tb.id=#{deptId}
    </if>
    <if test="postId != null and postId != ''.toString()">
      and tp.id=#{postId}
    </if>
    <if test="positionId != null and positionId != ''.toString()">
      and pos.id=#{positionId}
    </if>
    <if test="eduBackground != null and eduBackground != ''.toString()">
      and te.edu_background=#{eduBackground}
    </if>
    <if test="status != null and status != ''.toString()">
      and te.status=#{status}
    </if>
    <if test="nature != null and nature != ''.toString()">
      and te.nature=#{nature}
    </if>
    <if test="name != null and name != ''.toString()">
      and te.name=#{name}
    </if>
    <if test="phone != null and phone != ''.toString()">
      and te.phone=#{phone}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.zcz.bean.EmployeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_employee
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_employee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zcz.bean.EmployeeExample">
    delete from tb_employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zcz.bean.Employee">
    insert into tb_employee (id, name, emp_no, phone,
      password, sex, brithday, 
      persion_id, navite_place, edu_background, 
      status, nature, entry_day, 
      post_id, kindergarten_id)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{empNo,jdbcType=VARCHAR},#{phone,jdbcType=VARCHAR},
      #{password,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}, #{brithday,jdbcType=DATE}, 
      #{persionId,jdbcType=VARCHAR}, #{navitePlace,jdbcType=VARCHAR}, #{eduBackground,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{nature,jdbcType=INTEGER}, #{entryDay,jdbcType=DATE}, 
      #{postId,jdbcType=INTEGER}, #{kindergartenId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zcz.bean.Employee"
                useGeneratedKeys="true" keyProperty="id">
    insert into tb_employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="empNo != null">
        emp_no,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="brithday != null">
        brithday,
      </if>
      <if test="persionId != null">
        persion_id,
      </if>
      <if test="navitePlace != null">
        navite_place,
      </if>
      <if test="eduBackground != null">
        edu_background,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="nature != null">
        nature,
      </if>
      <if test="entryDay != null">
        entry_day,
      </if>
      <if test="postId != null">
        post_id,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="kindergartenId != null">
        kindergarten_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="empNo != null">
        #{empNo,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="brithday != null">
        #{brithday,jdbcType=DATE},
      </if>
      <if test="persionId != null">
        #{persionId,jdbcType=VARCHAR},
      </if>
      <if test="navitePlace != null">
        #{navitePlace,jdbcType=VARCHAR},
      </if>
      <if test="eduBackground != null">
        #{eduBackground,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="nature != null">
        #{nature,jdbcType=INTEGER},
      </if>
      <if test="entryDay != null">
        #{entryDay,jdbcType=DATE},
      </if>
      <if test="postId != null">
        #{postId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="kindergartenId != null">
        #{kindergartenId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zcz.bean.EmployeeExample" resultType="java.lang.Long">
    select count(*) from tb_employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_employee
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.emoNo != null">
        emp_no = #{record.emoNo,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=CHAR},
      </if>
      <if test="record.brithday != null">
        brithday = #{record.brithday,jdbcType=DATE},
      </if>
      <if test="record.persionId != null">
        persion_id = #{record.persionId,jdbcType=VARCHAR},
      </if>
      <if test="record.navitePlace != null">
        navite_place = #{record.navitePlace,jdbcType=VARCHAR},
      </if>
      <if test="record.eduBackground != null">
        edu_background = #{record.eduBackground,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.nature != null">
        nature = #{record.nature,jdbcType=INTEGER},
      </if>
      <if test="record.entryDay != null">
        entry_day = #{record.entryDay,jdbcType=DATE},
      </if>
      <if test="record.postId != null">
        post_id = #{record.postId,jdbcType=INTEGER},
      </if>
      <if test="record.kindergartenId != null">
        kindergarten_id = #{record.kindergartenId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_employee
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      emp_no = #{record.empNo,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=CHAR},
      brithday = #{record.brithday,jdbcType=DATE},
      persion_id = #{record.persionId,jdbcType=VARCHAR},
      navite_place = #{record.navitePlace,jdbcType=VARCHAR},
      edu_background = #{record.eduBackground,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      nature = #{record.nature,jdbcType=INTEGER},
      entry_day = #{record.entryDay,jdbcType=DATE},
      post_id = #{record.postId,jdbcType=INTEGER},
      kindergarten_id = #{record.kindergartenId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zcz.bean.Employee">
    update tb_employee
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="empNo != null">
        emp_no = #{empNo,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="brithday != null">
        brithday = #{brithday,jdbcType=DATE},
      </if>
      <if test="persionId != null">
        persion_id = #{persionId,jdbcType=VARCHAR},
      </if>
      <if test="navitePlace != null">
        navite_place = #{navitePlace,jdbcType=VARCHAR},
      </if>
      <if test="eduBackground != null">
        edu_background = #{eduBackground,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="nature != null">
        nature = #{nature,jdbcType=INTEGER},
      </if>
      <if test="entryDay != null">
        entry_day = #{entryDay,jdbcType=DATE},
      </if>
      <if test="postId != null">
        post_id = #{postId,jdbcType=INTEGER},
      </if>
      <if test="kindergartenId != null">
        kindergarten_id = #{kindergartenId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zcz.bean.Employee">
    update tb_employee
    set name = #{name,jdbcType=VARCHAR},
      emp_no = #{empNo,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      brithday = #{brithday,jdbcType=DATE},
      persion_id = #{persionId,jdbcType=VARCHAR},
      navite_place = #{navitePlace,jdbcType=VARCHAR},
      edu_background = #{eduBackground,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      nature = #{nature,jdbcType=INTEGER},
      entry_day = #{entryDay,jdbcType=DATE},
      post_id = #{postId,jdbcType=INTEGER},
      kindergarten_id = #{kindergartenId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>